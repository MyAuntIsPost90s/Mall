apply plugin: 'java-library'

repositories {
	maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
    jcenter()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

//设置编码格式
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

//配置资源路径
sourceSets {
   main {
      java {
         srcDir 'src/main/java'
      }
      resources {
         srcDir 'src/main/resource'
      }
   }
}


dependencies {
	apply from: "${rootProject.projectDir}/build.gradle"
	// db
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-jdbc', version: '2.1.0.RELEASE'
	compile group: 'org.mybatis.spring.boot', name: 'mybatis-spring-boot-starter', version: '2.1.0'
	compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.18'
	compile group: 'com.alibaba', name: 'druid-spring-boot-starter', version: '1.1.9'
	compile group: 'com.github.pagehelper', name: 'pagehelper-spring-boot-starter', version: '1.0.0'
	compile 'org.mybatis.generator:mybatis-generator-core:1.3.2'
	compile 'org.hibernate:hibernate-c3p0:5.3.9.Final'
    compile files('src/lib/mybatis-plug-1.0-SNAPSHOT.jar') //未加入maven中央库,需要手动加到本地仓库
}

//Task
configurations {  
    mybatisGenerator  
}
repositories {  
    mavenCentral()  
}  
dependencies {  
    mybatisGenerator 'org.mybatis.generator:mybatis-generator-core:1.3.2'  
    mybatisGenerator 'mysql:mysql-connector-java:5.1.36'
    mybatisGenerator files('src/lib/lingshi_base.jar')
}
task mybatisGenerator {  
   doLast {
	    def properties = new Properties()  
        file("src/main/resource/mybatis/generator/config.properties").withInputStream { 
           inputStream ->  properties.load(inputStream)  
        }    
	    ant.properties['targetProject'] = projectDir.path  
	    ant.properties['driverClass'] = properties.getProperty("driverClass")  
	    ant.properties['connectionURL'] = properties.getProperty("connectionURL")  
	    ant.properties['userId'] = properties.getProperty("userId")  
	    ant.properties['password'] = properties.getProperty("password")  
	    ant.properties['srcMainJava'] = projectDir.path + '/src/main/java'
	    ant.properties['srcMainResource'] = projectDir.path + '/src/main/resource'
	    ant.properties['modelPackage'] = properties.getProperty("modelPackage")
	    ant.properties['clientPackage'] = properties.getProperty("clientPackage")
	    ant.properties['mapperPackage'] = properties.getProperty("mapperPackage")
	    ant.taskdef(
	       name:'mbgenerator',
	       classname:'org.mybatis.generator.ant.GeneratorAntTask',
	       classpath:configurations.mybatisGenerator.asPath
	    )  
	    ant.mbgenerator(overwrite:true,configfile:projectDir.path+'/src/main/resource/mybatis/generator/generatorConfig.xml',verbose:true) {  
	        propertyset {
	            propertyref(name:'targetProject') 
	            propertyref(name:'driverClass')
	            propertyref(name:'connectionURL')
	            propertyref(name:'userId')
	            propertyref(name:'password')
	            propertyref(name:'srcMainJava')
	            propertyref(name:'srcMainResource')
	            propertyref(name:'modelPackage')
	            propertyref(name:'clientPackage')
	            propertyref(name:'mapperPackage')
	        }  
	    }  
    }
}
